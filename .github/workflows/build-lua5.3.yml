name: Build tolua runtime lua5.3

on:
  workflow_dispatch:

env:
  LUA_VERSION_NAME: lua53

jobs:
  build_windows_x64:
    runs-on: windows-latest
    env:
      ARTIFACT_NAME: ${{vars.APPLICATION_NAME}}-${{github.job}}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up tool chain
        shell: pwsh
        run: |
          Set-ExecutionPolicy RemoteSigned -scope CurrentUser
          iex "& {$(irm get.scoop.sh)} -RunAsAdmin"
          scoop install make
          scoop install gcc

      - name: Build Windows x64
        shell: bash
        run: build/build_lua53_mingw_windows_x64.sh

      - name: Archive Output
        uses: actions/upload-artifact@v4
        with:
          name: ${{env.ARTIFACT_NAME}}
          path: output

    outputs:
      artifact_name: ${{env.ARTIFACT_NAME}}

  build_linux_x64:
    runs-on: ubuntu-22.04
    env:
      ARTIFACT_NAME: ${{vars.APPLICATION_NAME}}-${{github.job}}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up tool chain
        run: |
          sudo apt-get install -y gcc make libreadline-dev

      - name: Build Linux x64
        run: build/build_lua53_linux_linux_x64.sh

      - name: Archive Output
        uses: actions/upload-artifact@v4
        with:
          name: ${{env.ARTIFACT_NAME}}
          path: output

    outputs:
      artifact_name: ${{env.ARTIFACT_NAME}}

  build_android_arm64:
    runs-on: ubuntu-22.04
    env:
      ARTIFACT_NAME: ${{vars.APPLICATION_NAME}}-${{github.job}}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r26d

      - name: Build Android arm64
        run: build/build_lua53_linux_android_arm64.sh

      - name: Archive Output
        uses: actions/upload-artifact@v4
        with:
          name: ${{env.ARTIFACT_NAME}}
          path: output

    outputs:
      artifact_name: ${{env.ARTIFACT_NAME}}
  
  release-artifact:
    runs-on: ubuntu-22.04
    needs: [ build_windows_x64, build_linux_x64, build_android_arm64 ]

    steps:
      - name: Downloads windows artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build_windows_x64.outputs.artifact_name }}
          path: output

      - name: Remove windows artifact
        uses: geekyeggo/delete-artifact@v5
        with:
          name: ${{ needs.build_windows_x64.outputs.artifact_name }}

      - name: Downloads linux artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build_linux_x64.outputs.artifact_name }}
          path: output

      - name: Remove linux artifact
        uses: geekyeggo/delete-artifact@v5
        with:
          name: ${{ needs.build_linux_x64.outputs.artifact_name }}

      - name: Downloads android artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build_android_x64.outputs.artifact_name }}
          path: output

      - name: Remove android artifact
        uses: geekyeggo/delete-artifact@v5
        with:
          name: ${{ needs.build_android_x64.outputs.artifact_name }}

      - name: Archive Output
        uses: actions/upload-artifact@v4
        with:
          name: ${{vars.APPLICATION_NAME}}-${{env.LUA_VERSION_NAME}}
          path: output
          retention-days: 2
